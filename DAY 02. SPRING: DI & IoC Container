DI (Dependency Injection) : 우리말로 '종속성 주입'이라는 의미. but 실질적인 의미로는 '부품을 조립하는 것'. 
  - 부품을 조립하는 것에는 '일체형'과 '조립형' 2가지로 나뉠 수 있음.
  - Ex. Composition(일체형,붙박이형) 보다는 Association(조립형)이 결합력이 낮아지기 때문에 유지보수or업데이트 할 때 더 유리함. (다만, 조립해야 한다는 번거로움이 있음) 
  - 기업에서는 Association 을 더 많이 사용하는 경향.
  
//Composition                   //Association
  class A {                     class A {
    private B b;                  private B b;

    public A() {                  public A() {
      b = new B();                }
    }                             
 }                                public void setB(B b) {
                                    this.b = b;
                                    }
                                }
                               
  - Composition: A입장에서는 B가 있는지 모름 / 프로그램이 A - B - C - D 순차적으로 큰 부품 → 작은 부품 순서로 만들어지게 됨.
      A a = new A();
      
  - Association(조립형)일 때 크게 2가지 방식으로 B가 주입됨(Injection) / 프로그램이 D - C - B - A 역순으로 작은 부품 → 큰 부품으로 만들어지게 됨.
                                                                        - IoC container (Inversion of Control container) 
    // Setter Injection  
        B b = new B();
        A a = new A();
        a.setB(b); // SPRING : DI 기능
    // Constructor Injection
        B b = new B();
        A a = new A(b); // SPRING : DI 기능
  
   주문서 작성: 조립형에서 일어나는 과정. 'XML문서' 또는 'annotation'방식으로 작성하게 됨.
  
